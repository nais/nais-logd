<match fluent.**>
  @type null
  @id fluent_drop
</match>

<source>
  @type prometheus
  bind 0.0.0.0
  port 9000
  metrics_path /metrics
</source>

<source>
  @type prometheus_monitor
</source>

<source>
  @type tail
  path /var/log/containers/*.log
  pos_file "#{ENV['LOGD_POS_FILE_DIR']}/es-containers.log.pos"
  time_format %Y-%m-%dT%H:%M:%S.%NZ
  tag kubernetes.*
  format json
  read_from_head true
</source>

<match kubernetes.var.log.containers.**nais-logd-fluentd**>
  @type null
  @id logd_drop
</match>

<filter **>
  @type nais_merge_json
  field log
</filter>

<filter kubernetes.**>
  @type kubernetes_metadata
  annotation_match ^nais.io
</filter>

<filter kubernetes.var.log.containers.rfr-**>
  @type nais_logformat
  logformat redis
</filter>

<filter kubernetes.var.log.containers.rfs-**>
  @type nais_logformat
  logformat redis
</filter>

<filter **>
  @type nais_logformat
</filter>

<filter **>
  @type nais_logtransform
</filter>

<filter **>
  @type nais_prefix_fields
  prefix x_
  regex ^(?:category|container|host|namespace|application|pod)$
</filter>

<filter **>
  @type nais_remap_kubernetes
</filter>

<filter kubernetes.var.log.containers.**kubewatch**>
  @type nais_kubewatch
</filter>

<filter kubernetes.var.log.containers.**kube-apiserver**>
  @type nais_kubeapiserver
</filter>

<filter kubernetes.var.log.containers.**traefik-ingress-controller**>
  @type nais_remap_traefik
</filter>

<filter **>
  @type nais_remap_elasticsearch
</filter>

<filter **>
  @type nais_remap_java
</filter>

<filter **>
  @type nais_keywords
  field exception
  regex \b[A-Z]\w+Exception\b
</filter>

<filter **>
  @type nais_keywords
  field message_code
  regex \bORA-\d{5}\b
</filter>

<filter **>
  @type nais_flatten_record
  keep ^(?:query_params|request)$
</filter>

<filter **>
  @type record_transformer
  <record>
    type "containerlog"
    cluster "#{ENV['CLUSTER_NAME']}"
    envclass "#{ENV['CLUSTER_ENVCLASS']}"
  </record>
</filter>

<filter **>
  @type nais_prefix_fields
  prefix x_
  regex ^(?!(?:[xX][-_]|@timestamp$|@version$|type$|received_at$|message$|message_code$|container$|host$|namespace$|application$|pod$|thread$|component$|category$|level$|stack_trace$|exception$|cluster$|envclass$|content_length$|referer$|remote_ip$|response_code$|request$|user$|user_agent$|ident$|processing_time$|source$|event$|uri$|method$|operation$|session$|path$|query_params$)).*
</filter>

# use empty string for fields missing in log message
<filter **>
  @type record_transformer
  enable_ruby
  <record>
    tmp_level ${record.has_key?('level') ? record['level'] : ''}
    tmp_pod ${record.has_key?('pod') ? record['pod'] : ''}
</record>
</filter>

<filter **>
  @type prometheus
  <metric>
    name logd_messages_total
    type counter
    desc Number of log messages
  </metric>
  <metric>
    name logd_exceptions_total
    type counter
    desc Number of exceptions
    label_key exception
  </metric>
  <labels>
    log_level ${tmp_level}
    log_pod_name ${tmp_pod}
    log_namespace ${namespace}
    log_app ${application}
  </labels>
</filter>

<filter **>
  @type record_transformer
  remove_keys tmp_level,tmp_pod
</filter>

<match **>
  @type elasticsearch
  @id elasticsearch_output
  include_tag_key false
  hosts "#{ENV['ELASTICSEARCH_HOSTS']}"
  type_name containerlog
  logstash_prefix "#{ENV['ELASTICSEARCH_INDEX_PREFIX']}"
  logstash_format true
  reconnect_on_error true
  reload_connections false
  reload_on_failure false
  <buffer>
    flush_mode interval
    flush_interval 5
    flush_thread_count 8
    retry_type periodic
    retry_wait 5
    retry_forever true
    chunk_limit_size 4M
    chunk_limit_records 4096
  </buffer>
</match>
