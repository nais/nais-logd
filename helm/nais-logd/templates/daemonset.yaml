apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "nais-logd.fluentd.fullname" . }}
  labels:
    app: {{ template "nais-logd.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.fluentd.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  updateStrategy:
    type: "{{ .Values.fluentd.updateStrategy }}"
  template:
    metadata:
      labels:
        app: {{ template "nais-logd.name" . }}
        component: "{{ .Values.fluentd.name }}"
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: {{ template "nais-logd.fullname" . }}
      containers:
      - name: {{ template "nais-logd.name" . }}-{{ .Values.fluentd.name }}
        {{- if .Values.fluentd.image.digest }}
        image: "{{ .Values.fluentd.image.repository }}@{{ .Values.fluentd.image.digest }}"
        {{- else }}
        image: "{{ .Values.fluentd.image.repository }}:{{ .Values.fluentd.image.tag }}"
        {{- end }}
        imagePullPolicy: "{{ .Values.fluentd.image.pullPolicy }}"
        resources:
{{ toYaml .Values.fluentd.resources | indent 10 }}
        env:
          - name: TZ
            value: "{{ .Values.fluentd.timezone }}"
          - name: ELASTICSEARCH_HOSTS
            value: "{{ .Values.elasticsearch.hosts }}"
          - name: ELASTICSEARCH_SCHEME
            value: "{{ .Values.elasticsearch.scheme }}"
          - name: ELASTICSEARCH_SSL_VERIFY
            value: "{{ .Values.elasticsearch.ssl_verify }}"
          - name: ELASTICSEARCH_CA_FILE
            value: "{{ .Values.elasticsearch.ca_file }}"
          - name: ELASTICSEARCH_INDEX_NAME
            value: "{{ .Values.elasticsearch.index_name }}"
          - name: ELASTICSEARCH_LOGSTASH_FORMAT
            value: "{{ .Values.elasticsearch.logstash_format }}"
          - name: ELASTICSEARCH_LOGSTASH_PREFIX
            value: "{{ .Values.elasticsearch.logstash_prefix }}"
          - name: ELASTICSEARCH_TYPE_NAME
            value: "{{ .Values.elasticsearch.type_name }}"
          - name: ELASTICSEARCH_MAX_RETRIES
            value: "{{ .Values.elasticsearch.max_retries }}"
          - name: FLUENTD_CONTAINERS_POS_FILE
            value: "{{ .Values.fluentd.pos_file.containers }}"
          - name: FLUENTD_JOURNAL_POS_FILE
            value: "{{ .Values.fluentd.pos_file.journal }}"
          - name: CLUSTER_NAME
            value: "{{ .Values.cluster.name }}"
          - name: CLUSTER_ENVCLASS
            value: "{{ .Values.cluster.envclass }}"
          - name: THROTTLE_BUCKET_PERIOD
            value: "{{ .Values.throttle.bucket_period }}"
          - name: THROTTLE_BUCKET_LIMIT
            value: "{{ .Values.throttle.bucket_limit }}"
          - name: THROTTLE_RESET_RATE
            value: "{{ .Values.throttle.reset_rate }}"
          - name: THROTTLE_DROP_LOGS
            value: "{{ .Values.throttle.drop_logs }}"
        ports:
          - name: metrics
            containerPort: 9000
            protocol: TCP
        volumeMounts:
{{- if .Values.configFiles }}
          - name: config-volume
            mountPath: /fluentd/etc
{{- end }}
{{- range $volume := .Values.volumes }}
          - name: "{{ $volume.name }}"
            mountPath: "{{ $volume.mountPath }}"
            readOnly: {{ $volume.readOnly }}
{{- end }}
{{- range $configmap := .Values.configMaps }}
          - name: {{ $configmap.name }}
            mountPath: {{ $configmap.path }}
{{- if $configmap.subPath }}
            subPath: {{ $configmap.subPath }}
{{- end }}
            readOnly: true
{{- end }}
      terminationGracePeriodSeconds: 30
      tolerations:
        - operator: Exists
      volumes:
{{- if .Values.configFiles }}
        - name: config-volume
          configMap:
            name: {{ template "nais-logd.fullname" . }}
{{- end }}
{{- range $volume := .Values.volumes }}
        - name: "{{ $volume.name }}"
          hostPath:
            path: "{{ $volume.hostPath }}"
{{- end }}
{{- range $configmap := .Values.configMaps }}
        - name: {{ $configmap.name }}
          configMap:
            name: {{ $configmap.name }}
{{- end }}
